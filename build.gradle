import java.nio.charset.StandardCharsets

/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'java-library'
    id 'maven-publish'
    id 'org.jetbrains.kotlin.jvm' version '1.8.0'
}

group = 'me.M64DiamondStar'
version = '1.4.0'
description = 'EffectMaster'

repositories {
    mavenLocal()
    maven {
        url = uri('https://hub.spigotmc.org/nexus/content/repositories/snapshots/')
    }

    maven {
        url = uri('https://oss.sonatype.org/content/groups/public/')
    }

    maven {
        url = uri('https://ci.mg-dev.eu/plugin/repository/everything')
    }

    maven {
        url = uri('https://repo.dmulloy2.net/repository/public/')
    }

    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {
    api 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.0'
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit:1.8.0'
    compileOnly 'org.spigotmc:spigot-api:1.20.4-R0.1-SNAPSHOT'
    compileOnly 'com.bergerkiller.bukkit:TrainCarts:1.19.2-v1-SNAPSHOT'
    compileOnly 'com.comphenix.protocol:ProtocolLib:5.1.0'
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks {
    compileJava {
        options.encoding = StandardCharsets.UTF_8.name() // We want UTF-8 for everything

        // Set the release flag. This configures what version bytecode the compiler will emit, as well as what JDK APIs are usable.
        // See https://openjdk.java.net/jeps/247 for more information.
        options.release.set(17)
    }

    compileKotlin {
        kotlinOptions.jvmTarget = '17'
    }

    javadoc {
        options.encoding = StandardCharsets.UTF_8.name() // We want UTF-8 for everything
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = 'me.m64diamondstar'
            artifactId = 'EffectMaster'
            version = '1.4.0'

            from components.java
        }
    }
}
